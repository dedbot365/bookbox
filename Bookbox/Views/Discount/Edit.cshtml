@model Bookbox.Models.Discount

@{
    ViewData["Title"] = "Edit Discount";
    var book = ViewBag.Book as Bookbox.Models.Book;
    Layout = "_DashboardLayout";
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">Edit Discount</h1>
            <p class="text-muted">Modify discount settings for "@(book?.Title ?? "Book")"</p>
        </div>
        <a asp-controller="Book" asp-action="Details" asp-route-id="@book?.BookId" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to Book
        </a>
    </div>

    <div class="card shadow mb-4 border-0 rounded-3">
        <div class="card-header py-3 bg-gradient" style="background-color: #f8f9fa; border-bottom: none;">
            <h6 class="m-0 fw-bold text-primary"><i class="fas fa-tag me-2"></i>Discount Information</h6>
        </div>
        <div class="card-body p-4">
            <form asp-action="Edit" method="post">
                <input type="hidden" asp-for="DiscountId" />
                <input type="hidden" asp-for="BookId" />
                
                <div class="row">
                    <div class="col-md-6 mb-4">
                        <label asp-for="DiscountPercentage" class="form-label fw-bold"><i class="fas fa-percent text-primary me-2"></i>Discount Percentage</label>
                        <div class="input-group">
                            <input asp-for="DiscountPercentage" class="form-control" type="number" min="1" max="90" required />
                            <span class="input-group-text">%</span>
                        </div>
                        <span asp-validation-for="DiscountPercentage" class="text-danger"></span>
                        <small class="form-text text-muted">Maximum allowed discount is 90%</small>
                    </div>
                    
                    <div class="col-md-6 mb-4">
                        <div class="form-check form-switch mt-4">
                            <input asp-for="IsOnSale" class="form-check-input" type="checkbox" role="switch" id="isActive" />
                            <label class="form-check-label" for="isActive">
                                <span class="badge bg-success active-badge">Active</span>
                                <span class="badge bg-secondary inactive-badge d-none">Inactive</span>
                            </label>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6 mb-4">
                        <label asp-for="StartDate" class="form-label fw-bold"><i class="fas fa-calendar-alt text-primary me-2"></i>Start Date</label>
                        <input asp-for="StartDate" class="form-control" type="date" required />
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                    </div>
                    
                    <div class="col-md-6 mb-4">
                        <label asp-for="EndDate" class="form-label fw-bold"><i class="fas fa-calendar-check text-primary me-2"></i>End Date (Optional)</label>
                        <input asp-for="EndDate" class="form-control" type="date" />
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                    </div>
                </div>
                
                <hr class="my-4">
                
                <div class="d-flex justify-content-end">
                    <a asp-controller="Book" asp-action="Details" asp-route-id="@book?.BookId" class="btn btn-outline-secondary me-2">
                        <i class="fas fa-times me-1"></i> Cancel
                    </a>
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="fas fa-save me-1"></i> Update
                    </button>
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                        <i class="fas fa-trash me-1"></i> Delete
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel"><i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-4">
                    <div class="mb-3">
                        <i class="fas fa-trash-alt fa-3x text-danger"></i>
                    </div>
                    <h5>Are you sure you want to delete this discount?</h5>
                    <p class="text-muted">This action cannot be undone.</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="Delete" method="post">
                    <input type="hidden" name="id" value="@Model.DiscountId" />
                    <input type="hidden" name="bookId" value="@Model.BookId" />
                    <button type="submit" class="btn btn-danger">Delete Discount</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const activeSwitch = document.getElementById('isActive');
            const activeBadge = document.querySelector('.active-badge');
            const inactiveBadge = document.querySelector('.inactive-badge');
            
            // Set initial state
            updateBadges();
            
            activeSwitch.addEventListener('change', updateBadges);
            
            function updateBadges() {
                if (activeSwitch.checked) {
                    activeBadge.classList.remove('d-none');
                    inactiveBadge.classList.add('d-none');
                } else {
                    activeBadge.classList.add('d-none');
                    inactiveBadge.classList.remove('d-none');
                }
            }
        });
    </script>
}