@model IEnumerable<Bookbox.Models.Book>
@inject Bookbox.Services.Interfaces.IDiscountService DiscountService

@{
    ViewData["Title"] = "Shop Books - " + ViewData["CategoryName"];
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    int totalItems = ViewData["TotalItems"] != null ? (int)ViewData["TotalItems"] : 0;
}

<div class="container-fluid mt-4 mb-5">
    <div class="row">
        <!-- Left Sidebar with Filters -->
        <div class="col-lg-3">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Filters</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Index" method="get" id="filterForm">
                        <!-- Preserve category in form -->
                        @if (!string.IsNullOrEmpty(ViewData["Category"]?.ToString()))
                        {
                            <input type="hidden" name="category" value="@ViewData["Category"]" />
                        }
                        
                        <!-- Search -->
                        <div class="mb-3">
                            <label for="searchTerm" class="form-label fw-bold">Search</label>
                            <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                                   placeholder="Title, author, ISBN..." value="@ViewData["SearchTerm"]">
                        </div>
                        
                        <hr />
                        
                        <!-- Genre -->
                        <div class="mb-3">
                            <label for="genre" class="form-label fw-bold">Genre</label>
                            <select class="form-select" id="genre" name="genre">
                                <option value="">All Genres</option>
                                @foreach (var genre in Enum.GetValues(typeof(Bookbox.Constants.Genre)))
                                {
                                    <option value="@genre" selected="@(ViewData["SelectedGenre"]?.ToString() == genre.ToString())">
                                        @genre
                                    </option>
                                }
                            </select>
                        </div>
                        
                        <!-- Format -->
                        <div class="mb-3">
                            <label for="format" class="form-label fw-bold">Format</label>
                            <select class="form-select" id="format" name="format">
                                <option value="">All Formats</option>
                                @foreach (var format in Enum.GetValues(typeof(Bookbox.Constants.Format)))
                                {
                                    <option value="@format" selected="@(ViewData["SelectedFormat"]?.ToString() == format.ToString())">
                                        @format
                                    </option>
                                }
                            </select>
                        </div>
                        
                        <!-- Price Range -->
                        <div class="mb-3">
                            <label class="form-label fw-bold">Price Range</label>
                            <div class="row g-2">
                                <div class="col">
                                    <div class="input-group">
                                        <span class="input-group-text">NPR</span>
                                        <input type="number" class="form-control" name="minPrice" id="minPrice" 
                                               placeholder="Min" min="0" step="0.01" value="@ViewData["MinPrice"]">
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="input-group">
                                        <span class="input-group-text">NPR</span>
                                        <input type="number" class="form-control" name="maxPrice" id="maxPrice" 
                                               placeholder="Max" min="0" step="0.01" value="@ViewData["MaxPrice"]">
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Availability -->
                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="inStock" name="inStock" value="true" 
                                       @(ViewData["InStock"] != null && (bool)ViewData["InStock"] ? "checked" : "")>
                                <label class="form-check-label" for="inStock">
                                    In Stock Only
                                </label>
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-filter"></i> Apply Filters
                            </button>
                            <a href="@Url.Action("Index", "Shop", new { category = ViewData["Category"] })" class="btn btn-outline-secondary">
                                <i class="fas fa-times"></i> Clear Filters
                            </a>
                        </div>
                    </form>
                </div>
            </div>
            
            <!-- Categories Menu -->
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Categories</h5>
                </div>
                <div class="list-group list-group-flush">
                    <a href="@Url.Action("Index", "Shop")" class="list-group-item list-group-item-action @(string.IsNullOrEmpty(ViewData["Category"]?.ToString()) ? "active" : "")">
                        All Books
                    </a>
                    <a href="@Url.Action("Index", "Shop", new { category = "bestsellers" })" class="list-group-item list-group-item-action @(ViewData["Category"]?.ToString() == "bestsellers" ? "active" : "")">
                        Bestsellers
                    </a>
                    <a href="@Url.Action("Index", "Shop", new { category = "award-winners" })" class="list-group-item list-group-item-action @(ViewData["Category"]?.ToString() == "award-winners" ? "active" : "")">
                        Award Winners
                    </a>
                    <a href="@Url.Action("Index", "Shop", new { category = "new-releases" })" class="list-group-item list-group-item-action @(ViewData["Category"]?.ToString() == "new-releases" ? "active" : "")">
                        New Releases
                    </a>
                    <a href="@Url.Action("Index", "Shop", new { category = "new-arrivals" })" class="list-group-item list-group-item-action @(ViewData["Category"]?.ToString() == "new-arrivals" ? "active" : "")">
                        New Arrivals
                    </a>
                    <a href="@Url.Action("Index", "Shop", new { category = "coming-soon" })" class="list-group-item list-group-item-action @(ViewData["Category"]?.ToString() == "coming-soon" ? "active" : "")">
                        Coming Soon
                    </a>
                </div>
            </div>
        </div>
        
        <!-- Main Content Area -->
        <div class="col-lg-9">
            <!-- Results Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">@ViewData["CategoryName"]</h1>
                    <p class="text-muted">
                        Showing @totalItems book@(totalItems != 1 ? "s" : "")
                        @if (!string.IsNullOrEmpty(ViewData["SearchTerm"]?.ToString()))
                        {
                            <span>for "<strong>@ViewData["SearchTerm"]</strong>"</span>
                        }
                    </p>
                </div>
                <div class="d-flex align-items-center">
                    <label for="sortBy" class="me-2">Sort by:</label>
                    <select id="sortBy" name="sortBy" class="form-select" style="width: auto;" onchange="updateSort(this.value)">
                        <option value="newest" selected="@(ViewData["SortBy"]?.ToString() == "newest")">Newest Arrivals</option>
                        <option value="bestselling" selected="@(ViewData["SortBy"]?.ToString() == "bestselling")">Bestselling</option>
                        <option value="title" selected="@(ViewData["SortBy"]?.ToString() == "title")">Title (A-Z)</option>
                        <option value="publication_date" selected="@(ViewData["SortBy"]?.ToString() == "publication_date")">Publication Date</option>
                        <option value="price_asc" selected="@(ViewData["SortBy"]?.ToString() == "price_asc")">Price (Low to High)</option>
                        <option value="price_desc" selected="@(ViewData["SortBy"]?.ToString() == "price_desc")">Price (High to Low)</option>
                    </select>
                </div>
            </div>

            <!-- Book Grid -->
            @if (Model.Any())
            {
                <div class="row row-cols-2 row-cols-md-3 row-cols-xl-4 g-4">
                    @foreach (var book in Model)
                    {
                        <div class="col">
                            <div class="card h-100 book-card">
                                <div class="card-img-container">
                                    @if (!string.IsNullOrEmpty(book.ImageUrl))
                                    {
                                        <img src="@book.ImageUrl" class="card-img-top" alt="@book.Title">
                                    }
                                    else
                                    {
                                        <div class="placeholder-image">
                                            <i class="fas fa-book fa-4x text-secondary"></i>
                                        </div>
                                    }
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title book-title">@book.Title</h5>
                                    <p class="card-text book-author">by @book.Author</p>
                                    <p class="card-text mb-0">
                                        <span class="badge bg-secondary">@book.Genre</span>
                                        <span class="badge bg-info">@book.Format</span>
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center mt-2">
                                        @{
                                            var bookDiscount = await DiscountService.GetActiveDiscountForBookAsync(book.BookId);
                                            var discountedPrice = bookDiscount != null ? 
                                                DiscountService.CalculateDiscountedPrice(book.Price, bookDiscount.DiscountPercentage) : book.Price;
                                            var daysRemaining = bookDiscount?.EndDate != null ? 
                                                DiscountService.GetRemainingDays(bookDiscount.EndDate) : -1;
                                        }
                                        
                                        @if (bookDiscount != null)
                                        {
                                            <div>
                                                <span class="text-muted"><s>NPR @book.Price.ToString("0.00")</s></span>
                                                <span class="book-price text-danger">NPR @discountedPrice.ToString("0.00")</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="book-price">NPR @book.Price.ToString("0.00")</span>
                                        }
                                        <span class="badge @(book.Stock > 0 ? "bg-success" : "bg-danger")">
                                            @(book.Stock > 0 ? "In Stock" : "Out of Stock")
                                        </span>
                                    </div>
                                    @if (bookDiscount != null && daysRemaining > 0)
                                    {
                                        <div class="mt-1">
                                            <span class="badge bg-warning">Sale ends in @daysRemaining days</span>
                                        </div>
                                    }
                                </div>
                                <div class="card-footer bg-white border-top-0">
                                    <div class="d-grid gap-2">
                                        <a href="@Url.Action("Details", "Book", new { id = book.BookId })" class="btn btn-outline-primary">
                                            <i class="fas fa-info-circle"></i> View Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                <!-- Pagination -->
                @if (totalPages > 1)
                {
                    <nav class="mt-4" aria-label="Book pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Shop", new { page = currentPage - 1, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                    Previous
                                </a>
                            </li>
                            
                            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", "Shop", new { page = i, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                        @i
                                    </a>
                                </li>
                            }
                            
                            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Shop", new { page = currentPage + 1, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                    Next
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="alert alert-info">
                    <p class="mb-0">
                        @if (ViewData["SearchTerm"] != null || ViewData["SelectedGenre"] != null || ViewData["SelectedFormat"] != null || 
                            ViewData["MinPrice"] != null || ViewData["MaxPrice"] != null || ViewData["InStock"] != null)
                        {
                            <span>No books match your filter criteria. <a href="@Url.Action("Index", "Shop", new { category = ViewData["Category"] })">Clear filters</a> to see all books.</span>
                        }
                        else
                        {
                            <span>No books have been added to our catalog yet. Please check back soon!</span>
                        }
                    </p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateSort(sortValue) {
            // Get current URL
            var url = new URL(window.location.href);
            
            // Update or add sort parameter
            url.searchParams.set('sortBy', sortValue);
            
            // Redirect to new URL
            window.location.href = url.toString();
        }
    </script>
}