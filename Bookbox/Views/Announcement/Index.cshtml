@model IEnumerable<Bookbox.Models.Announcement>

@{
    ViewData["Title"] = "Manage Announcements";
    // Define the Nepal timezone once
    TimeZoneInfo nepalTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Asia/Kathmandu");
    DateTime localNow = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, nepalTimeZone);
    
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    int totalItems = ViewData["TotalItems"] != null ? (int)ViewData["TotalItems"] : 0;
}

<div class="container-fluid mt-4 mb-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0">Manage Announcements</h1>
            <p class="text-muted">Create and manage announcements for your store.</p>
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show mt-2" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
        </div>
        <div>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> New Announcement
            </a>
        </div>
    </div>

    <div class="row">
        <!-- Left Sidebar with Filters -->
        <div class="col-lg-3">
            <partial name="_AnnouncementFilterSidebar" />
        </div>
        
        <!-- Main Content Area -->
        <div class="col-lg-9">
            <!-- Results Header -->
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold">All Announcements</h6>
                    <div class="d-flex align-items-center">
                        <label for="sortBy" class="me-2">Sort by:</label>
                        <select id="sortBy" name="sortBy" class="form-select form-select-sm" style="width: auto;" onchange="updateSort(this.value)">
                            <option value="last_modified" selected="@(ViewData["SortBy"]?.ToString() == "last_modified")">Last Modified</option>
                            <option value="first_modified" selected="@(ViewData["SortBy"]?.ToString() == "first_modified")">First Modified</option>
                            <option value="newest" selected="@(ViewData["SortBy"]?.ToString() == "newest")">Start Date (Newest)</option>
                            <option value="oldest" selected="@(ViewData["SortBy"]?.ToString() == "oldest")">Start Date (Oldest)</option>
                            <option value="title" selected="@(ViewData["SortBy"]?.ToString() == "title")">Title (A-Z)</option>
                        </select>
                    </div>
                </div>
                
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="d-flex justify-content-between mb-3">
                            <p class="text-muted">
                                Showing @totalItems announcement@(totalItems != 1 ? "s" : "")
                                @if (!string.IsNullOrEmpty(ViewData["SearchTerm"]?.ToString()))
                                {
                                    <span>for "<strong>@ViewData["SearchTerm"]</strong>"</span>
                                }
                            </p>
                        </div>
                        
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped" id="announcementTable">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Status</th>
                                        <th>Start Date</th>
                                        <th>End Date</th>
                                        <th>Created By</th>
                                        <th>Last Modified</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.Title</td>
                                            <td>
                                                @{
                                                    bool isActive = item.IsActive;
                                                    DateTime localStartDate = TimeZoneInfo.ConvertTimeFromUtc(item.StartDate, nepalTimeZone);
                                                    DateTime? localEndDate = item.EndDate.HasValue ? 
                                                        TimeZoneInfo.ConvertTimeFromUtc(item.EndDate.Value, nepalTimeZone) : null;
                                                    
                                                    bool isCurrentlyActive = isActive && 
                                                        localStartDate <= localNow && 
                                                        (localEndDate == null || localEndDate >= localNow);
                                                    
                                                    if (isCurrentlyActive)
                                                    {
                                                        <span class="badge bg-success">Active</span>
                                                    }
                                                    else if (isActive && item.StartDate > DateTime.UtcNow)
                                                    {
                                                        <span class="badge bg-warning">Scheduled</span>
                                                    }
                                                    else if (isActive && item.EndDate < DateTime.UtcNow)
                                                    {
                                                        <span class="badge bg-secondary">Expired</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-danger">Inactive</span>
                                                    }
                                                }
                                            </td>
                                            <td>@localStartDate.ToString("MMM dd, yyyy")</td>
                                            <td>@(localEndDate.HasValue ? localEndDate.Value.ToString("MMM dd, yyyy") : "No End Date")</td>
                                            <td>@(item.User?.Username ?? "Unknown")</td>
                                            <td>@item.LastModified.ToString("MMM dd, yyyy HH:mm")</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@item.AnnouncementId" class="btn btn-sm btn-info">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@item.AnnouncementId" class="btn btn-sm btn-primary">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-danger delete-announcement" 
                                                            data-bs-toggle="modal" 
                                                            data-bs-target="#deleteAnnouncementModal"
                                                            data-id="@item.AnnouncementId" 
                                                            data-title="@item.Title">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        <!-- Pagination -->
                        @if (totalPages > 1)
                        {
                            <nav class="mt-4" aria-label="Announcement pagination">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("Index", "Announcement", new { page = currentPage - 1, searchTerm = ViewData["SearchTerm"], status = ViewData["SelectedStatus"], startDateFrom = ViewData["StartDateFrom"], startDateTo = ViewData["StartDateTo"], endDateFrom = ViewData["EndDateFrom"], endDateTo = ViewData["EndDateTo"], sortBy = ViewData["SortBy"] })">
                                            Previous
                                        </a>
                                    </li>
                                    
                                    @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", "Announcement", new { page = i, searchTerm = ViewData["SearchTerm"], status = ViewData["SelectedStatus"], startDateFrom = ViewData["StartDateFrom"], startDateTo = ViewData["StartDateTo"], endDateFrom = ViewData["EndDateFrom"], endDateTo = ViewData["EndDateTo"], sortBy = ViewData["SortBy"] })">
                                                @i
                                            </a>
                                        </li>
                                    }
                                    
                                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("Index", "Announcement", new { page = currentPage + 1, searchTerm = ViewData["SearchTerm"], status = ViewData["SelectedStatus"], startDateFrom = ViewData["StartDateFrom"], startDateTo = ViewData["StartDateTo"], endDateFrom = ViewData["EndDateFrom"], endDateTo = ViewData["EndDateTo"], sortBy = ViewData["SortBy"] })">
                                            Next
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-bullhorn fa-4x text-muted mb-3"></i>
                            <h4>No announcements found</h4>
                            <p class="text-muted">
                                @if (ViewData["SearchTerm"] != null || ViewData["SelectedStatus"] != null || 
                                    ViewData["StartDateFrom"] != null || ViewData["StartDateTo"] != null ||
                                    ViewData["EndDateFrom"] != null || ViewData["EndDateTo"] != null)
                                {
                                    <span>No announcements match your filter criteria. <a href="@Url.Action("Index", "Announcement")">Clear filters</a> to see all announcements.</span>
                                }
                                else
                                {
                                    <span>There are no announcements in the system yet.</span>
                                    <br />
                                    <a asp-action="Create" class="btn btn-outline-primary mt-3">
                                        <i class="fas fa-plus"></i> Create Your First Announcement
                                    </a>
                                }
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- View Announcement Modal -->
<div class="modal fade" id="viewAnnouncementModal" tabindex="-1" aria-labelledby="viewAnnouncementModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="viewAnnouncementModalLabel">Announcement Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-3">Title</dt>
                    <dd class="col-sm-9" id="announcement-title"></dd>
                    
                    <dt class="col-sm-3">Content</dt>
                    <dd class="col-sm-9" id="announcement-content"></dd>
                    
                    <dt class="col-sm-3">Start Date</dt>
                    <dd class="col-sm-9" id="announcement-start-date"></dd>
                    
                    <dt class="col-sm-3">End Date</dt>
                    <dd class="col-sm-9" id="announcement-end-date"></dd>
                    
                    <dt class="col-sm-3">Status</dt>
                    <dd class="col-sm-9" id="announcement-status"></dd>
                    
                    <dt class="col-sm-3">Created By</dt>
                    <dd class="col-sm-9" id="announcement-creator"></dd>
                    
                    <dt class="col-sm-3">Last Modified</dt>
                    <dd class="col-sm-9" id="announcement-last-modified"></dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteAnnouncementModal" tabindex="-1" aria-labelledby="deleteAnnouncementModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteAnnouncementModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="deleteAnnouncementForm" asp-action="Delete" method="post">
                    <input type="hidden" id="delete-announcement-id" name="id" />
                    <p>Are you sure you want to delete this announcement "<span id="delete-announcement-title"></span>"?</p>
                    <p class="text-danger">This action cannot be undone.</p>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="deleteAnnouncementForm" class="btn btn-danger">Delete Announcement</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize datatable with sorting disabled (we'll handle via server-side)
            $('#announcementTable').DataTable({
                "paging": false,
                "ordering": false,
                "info": false,
                "searching": false
            });
            
            // Direct event handler approach for delete modal
            $(document).on('click', '.delete-announcement', function() {
                var id = $(this).data('id');
                var title = $(this).data('title');
                
                console.log('Delete button clicked. ID:', id, 'Title:', title);
                
                // Update the modal's content
                document.getElementById('delete-announcement-title').innerText = title;
                document.getElementById('delete-announcement-id').value = id;
            });
            
            // Modal event listener approach for Bootstrap 5
            $('#deleteAnnouncementModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var id = button.data('id');
                var title = button.data('title');
                
                console.log('Modal opening. ID:', id, 'Title:', title);
                
                // Update the modal's content using vanilla JavaScript
                document.getElementById('delete-announcement-title').innerText = title;
                document.getElementById('delete-announcement-id').value = id;
            });
        });
        
        function updateSort(sortValue) {
            // Get current URL and parameters
            var url = new URL(window.location.href);
            
            // Update sort parameter
            url.searchParams.set('sortBy', sortValue);
            
            // Keep page at 1 when changing sort
            url.searchParams.set('page', 1);
            
            // Redirect to new URL
            window.location.href = url.toString();
        }
    </script>
}