@model Bookbox.Models.Order
@{
    ViewData["Title"] = $"Order #{Model.OrderNumber}";
    Layout = "_DashboardLayout";
}

<div class="container-fluid py-4">
    <!-- Header section with stats -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h2 mb-1">
                <i class="fas fa-file-invoice me-2 text-purple"></i>
                Order #@Model.OrderNumber
            </h1>
            <p class="text-muted">Order details and management</p>
        </div>
        
        <a asp-action="Orders" class="btn btn-outline-primary">
            <i class="fas fa-arrow-left me-1"></i> Back to Orders
        </a>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show shadow-sm rounded-3" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-8">
            <div class="card shadow-sm rounded-3 border-0 mb-4">
                <div class="card-header py-3 bg-gradient" style="background-color: #4D4490; color: white;">
                    <h5 class="mb-0 fw-semibold"><i class="fas fa-book me-2"></i> Ordered Items</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Book</th>
                                    <th>Quantity</th>
                                    <th>Price</th>
                                    <th class="text-end">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderItems)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(item.Book?.ImageUrl))
                                                {
                                                    <img src="@item.Book.ImageUrl" class="me-2 rounded shadow-sm" 
                                                         style="width: 40px; height: 60px; object-fit: cover;" alt="Book cover">
                                                }
                                                else
                                                {
                                                    <div class="bg-light rounded me-2 d-flex align-items-center justify-content-center" 
                                                         style="width: 40px; height: 60px;">
                                                        <i class="fas fa-book text-secondary"></i>
                                                    </div>
                                                }
                                                <div>
                                                    <div class="fw-medium">@item.Book?.Title</div>
                                                    <small class="text-muted">@item.Book?.Author</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="align-middle">@item.Quantity</td>
                                        <td class="align-middle">
                                            @if (item.DiscountedPrice < item.Price)
                                            {
                                                <div>NPR @item.DiscountedPrice.ToString("N0")</div>
                                                <small class="text-decoration-line-through text-muted">NPR @item.Price.ToString("N0")</small>
                                            }
                                            else
                                            {
                                                <div>NPR @item.Price.ToString("N0")</div>
                                            }
                                        </td>
                                        <td class="text-end align-middle fw-semibold">NPR @((item.DiscountedPrice > 0 ? item.DiscountedPrice : item.Price) * item.Quantity).ToString("N0")</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-group-divider">
                                @if (Model.DiscountApplied > 0)
                                {
                                    <tr>
                                        <td colspan="3" class="text-end fw-bold">Discount:</td>
                                        <td class="text-end text-danger">-NPR @Model.DiscountApplied.ToString("N0")</td>
                                    </tr>
                                }
                                <tr>
                                    <td colspan="3" class="text-end fw-bold">Total:</td>
                                    <td class="text-end fw-bold">NPR @Model.TotalAmount.ToString("N0")</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm rounded-3 border-0 mb-4">
                <div class="card-header py-3 bg-gradient" style="background-color: #4D4490; color: white;">
                    <h5 class="mb-0 fw-semibold"><i class="fas fa-info-circle me-2"></i> Order Information</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                            <span class="fw-medium">Status:</span>
                            @if (Model.Status == Bookbox.Constants.OrderStatus.Pending)
                            {
                                <span class="badge rounded-pill bg-warning text-dark px-3 py-2">
                                    <i class="fas fa-clock me-1"></i> Pending
                                </span>
                            }
                            else if (Model.Status == Bookbox.Constants.OrderStatus.Completed)
                            {
                                <span class="badge rounded-pill bg-success px-3 py-2">
                                    <i class="fas fa-check-circle me-1"></i> Completed
                                </span>
                            }
                            else
                            {
                                <span class="badge rounded-pill bg-secondary px-3 py-2">
                                    <i class="fas fa-times-circle me-1"></i> Cancelled
                                </span>
                            }
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                            <span class="fw-medium">Order Date:</span>
                            <span class="text-muted">@Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</span>
                        </li>
                        @if (Model.CompletedDate.HasValue)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                <span class="fw-medium">Completed Date:</span>
                                <span class="text-muted">@Model.CompletedDate.Value.ToString("MMM dd, yyyy HH:mm")</span>
                            </li>
                        }
                        <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                            <span class="fw-medium">Payment Method:</span>
                            <span class="badge rounded-pill bg-light text-dark border px-3 py-2">@Model.PaymentMethod.ToString()</span>
                        </li>
                    </ul>
                </div>
            </div>
            
            <div class="card shadow-sm rounded-3 border-0 mb-4">
                <div class="card-header py-3 bg-gradient" style="background-color: #4D4490; color: white;">
                    <h5 class="mb-0 fw-semibold"><i class="fas fa-user me-2"></i> Customer Information</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        @if (!string.IsNullOrEmpty(Model.User?.ImageUrlText))
                        {
                            <img src="@Model.User.ImageUrlText" alt="@Model.User.Username" 
                                class="rounded-circle me-3 shadow-sm" 
                                style="width: 60px; height: 60px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="avatar-circle bg-light me-3" style="width: 60px; height: 60px;">
                                <i class="fas fa-user fa-2x text-secondary"></i>
                            </div>
                        }
                        <div>
                            <h6 class="mb-0 fw-bold">@Model.User?.FirstName @Model.User?.LastName</h6>
                            <p class="mb-0 text-muted">@@@Model.User?.Username</p>
                        </div>
                    </div>
                    
                    <div class="bg-light rounded-3 p-3 mb-2">
                        <div class="d-flex align-items-center mb-2">
                            <i class="fas fa-envelope text-purple me-2"></i>
                            <span class="fw-medium">Email:</span>
                        </div>
                        <p class="mb-0 ms-4">@Model.User?.Email</p>
                    </div>
                    
                    <div class="bg-light rounded-3 p-3">
                        <div class="d-flex align-items-center mb-2">
                            <i class="fas fa-phone text-purple me-2"></i>
                            <span class="fw-medium">Contact:</span>
                        </div>
                        <p class="mb-0 ms-4">@(string.IsNullOrEmpty(Model.User?.ContactNo) ? "Not provided" : Model.User.ContactNo)</p>
                    </div>
                </div>
            </div>
            
            @if (Model.Status == Bookbox.Constants.OrderStatus.Pending)
            {
                <div class="card shadow-sm rounded-3 border-0" id="redeem">
                    <div class="card-header py-3 bg-success text-white">
                        <h5 class="mb-0 fw-semibold"><i class="fas fa-check-circle me-2"></i> Redeem Order</h5>
                    </div>
                    <div class="card-body">
                        <p class="text-muted mb-3">Enter the claim code to verify and complete this order:</p>
                        <form id="redeemOrderForm" asp-action="RedeemOrder" method="post">
                            <input type="hidden" name="id" value="@Model.OrderId" />
                            <div class="mb-3 position-relative">
                                <div class="input-group">
                                    <span class="input-group-text bg-light">
                                        <i class="fas fa-key text-secondary"></i>
                                    </span>
                                    <input type="text" class="form-control" name="claimCode" 
                                           placeholder="Enter claim code" required 
                                           style="border-left: none;" />
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success w-100 py-2">
                                <i class="fas fa-check me-1"></i> Verify & Complete Order
                            </button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Success Modal -->
<div class="modal fade" id="orderSuccessModal" tabindex="-1" aria-labelledby="orderSuccessModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-success text-white border-0">
                <h5 class="modal-title" id="orderSuccessModalLabel">
                    <i class="fas fa-check-circle me-2"></i>Order Completed
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4 text-center">
                <div class="success-icon-container mb-4">
                    <i class="fas fa-check-circle fa-4x text-success"></i>
                </div>
                <h4 class="mb-3">Order Redeemed Successfully!</h4>
                <p class="text-muted mb-4">
                    Order #@Model.OrderNumber has been marked as completed.
                    <br>The customer will be notified via email.
                </p>
            </div>
            <div class="modal-footer border-0 justify-content-center">
                <button type="button" id="continueButton" class="btn btn-primary px-4 py-2">
                    <i class="fas fa-arrow-right me-2"></i>Continue to Orders
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Custom styles for order details page */
        .card {
            transition: all 0.2s ease;
            border-radius: 0.75rem;
        }
        
        .card-header {
            border-radius: 0.75rem 0.75rem 0 0 !important;
        }
        
        .avatar-circle {
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .text-purple {
            color: #6f42c1 !important;
        }
        
        /* Input focus style */
        .form-control:focus {
            border-color: #6a55c7;
            box-shadow: 0 0 0 0.25rem rgba(106, 85, 199, 0.25);
        }
        
        /* Badge styles */
        .badge {
            font-weight: 500;
        }
        
        /* Success modal styling */
        .success-icon-container {
            width: 100px;
            height: 100px;
            background-color: rgba(40, 167, 69, 0.1);
            border-radius: 50%;
            margin: 0 auto;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle the redeem order form submission
            $('#redeemOrderForm').on('submit', function(e) {
                e.preventDefault();
                
                // Get form data
                const form = $(this);
                const url = form.attr('action');
                const data = form.serialize();
                const submitButton = form.find('button[type="submit"]');
                
                // Disable button and show loading state
                submitButton.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Processing...');
                
                // Submit the form via AJAX
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: data,
                    success: function(response) {
                        if (response.success) {
                            // Show success modal
                            const successModal = new bootstrap.Modal(document.getElementById('orderSuccessModal'));
                            successModal.show();
                            
                            // Set up continue button to redirect
                            $('#continueButton').on('click', function() {
                                window.location.href = '@Url.Action("Orders", "Staff")';
                            });
                        } else {
                            // Show error alert
                            $('<div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">' +
                              '<i class="fas fa-exclamation-circle me-2"></i>' +
                              response.message +
                              '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                              '</div>').insertBefore(form);
                            
                            // Reset button
                            submitButton.prop('disabled', false).html('<i class="fas fa-check me-1"></i> Verify & Complete Order');
                        }
                    },
                    error: function() {
                        // Show error alert
                        $('<div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">' +
                          '<i class="fas fa-exclamation-circle me-2"></i>' +
                          'An error occurred while processing your request. Please try again.' +
                          '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>' +
                          '</div>').insertBefore(form);
                        
                        // Reset button
                        submitButton.prop('disabled', false).html('<i class="fas fa-check me-1"></i> Verify & Complete Order');
                    }
                });
            });
        });
    </script>
}