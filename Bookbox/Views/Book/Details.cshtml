@model Bookbox.Models.Book
@inject Bookbox.Services.Interfaces.IDiscountService DiscountService
@inject Bookbox.Services.Interfaces.IBookmarkService BookmarkService
@using System.Security.Claims
@using Bookbox.DTOs
@{
    ViewData["Title"] = Model.Title;
    var discountInfo = await DiscountService.GetActiveDiscountForBookAsync(Model.BookId);
    var isAdmin = User.IsInRole("Admin");
    var discountedPrice = discountInfo != null ? 
        DiscountService.CalculateDiscountedPrice(Model.Price, discountInfo.DiscountPercentage) : 
        Model.Price;
    var daysRemaining = discountInfo?.EndDate != null ? 
        DiscountService.GetRemainingDays(discountInfo.EndDate) : 
        -1;
}

<div class="container-fluid mt-4">
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold">@Model.Title</h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3 text-center">
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <img src="@Model.ImageUrl" alt="@Model.Title" class="img-fluid mb-3" style="max-height: 300px;" />
                    }
                    else
                    {
                        <div class="bg-light p-5 mb-3">
                            <i class="fas fa-book fa-5x text-secondary"></i>
                            <p class="mt-3">No cover image available</p>
                        </div>
                    }
                    
                    <div class="mt-3">
                        <div class="badge @(Model.Stock > 0 ? "bg-success" : "bg-danger") text-white p-2">
                            @(Model.Stock > 0 ? $"In Stock ({Model.Stock})" : "Out of Stock")
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Author:</div>
                        <div class="col-md-9">@Model.Author</div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Genre:</div>
                        <div class="col-md-9">@Model.Genre</div>
                    </div>
                    
                    <div class="row mb-2">
                        <div class="col-md-3 fw-bold">Price:</div>
                        <div class="col-md-9">
                            @if (discountInfo != null)
                            {
                                <span class="text-muted"><s>NPR @Model.Price.ToString("F2")</s></span>
                                <span class="text-danger">NPR @discountedPrice.ToString("F2")</span>
                                <span class="badge bg-danger ms-2">ON SALE</span>
                                @if (daysRemaining > 0)
                                {
                                    <span class="badge bg-warning ms-2">@daysRemaining days remaining</span>
                                }
                            }
                            else
                            {
                                <span>NPR @Model.Price.ToString("F2")</span>
                            }
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Format:</div>
                        <div class="col-md-9">@Model.Format</div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Publisher:</div>
                        <div class="col-md-9">@Model.Publisher</div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">ISBN:</div>
                        <div class="col-md-9">@Model.ISBN</div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Publication Date:</div>
                        <div class="col-md-9">@Model.PublicationDate.ToString("MMMM dd, yyyy")</div>
                    </div>

                    @if (Model.IsComingSoon)
                    {
                        <div class="row mb-3">
                            <div class="col-md-3 fw-bold">Status:</div>
                            <div class="col-md-9">
                                <span class="badge bg-warning text-dark">Coming Soon</span>
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Awards))
                    {
                        <div class="row mb-3">
                            <div class="col-md-3 fw-bold">Awards:</div>
                            <div class="col-md-9">@Model.Awards</div>
                        </div>
                    }
                    
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Physical Stock:</div>
                        <div class="col-md-9">@Model.PhysicalStock</div>
                    </div>
                    
                    <hr />
                    
                    <div class="row mb-3">
                        <div class="col-12 fw-bold">Description:</div>
                        <div class="col-12 mt-2">
                            <p class="text-justify">@Model.Description</p>
                        </div>
                    </div>

                    @if (Model.Discounts.Any(d => d.IsOnSale && d.StartDate <= DateTime.UtcNow && (d.EndDate == null || d.EndDate > DateTime.UtcNow)))
                    {
                        var saleDiscount = Model.Discounts.First(d => d.IsOnSale && d.StartDate <= DateTime.UtcNow && (d.EndDate == null || d.EndDate > DateTime.UtcNow));
                        <div class="d-flex align-items-center mb-2">
                            <span class="badge bg-danger me-2">ON SALE</span>
                            @if (saleDiscount.EndDate.HasValue)
                            {
                                var saleDaysRemaining = (saleDiscount.EndDate.Value - DateTime.UtcNow).Days;
                                <span class="badge bg-warning text-dark">@saleDaysRemaining @(saleDaysRemaining == 1 ? "day" : "days") left</span>
                            }
                        </div>
                    }

                    <!-- Book actions section - Add to Cart and Wishlist buttons -->
                    <div class="mt-4">
                        <div class="d-flex flex-wrap gap-3 align-items-start">
                            @if (User.Identity?.IsAuthenticated == true && User.IsInRole("Member"))
                            {
                                <div>
                                    @if (Model.Stock > 0)
                                    {
                                        <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="bookId" value="@Model.BookId" />
                                            <input type="hidden" name="price" value="@discountedPrice" />
                                            <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                            
                                            <div class="input-group">
                                                <input type="number" name="quantity" class="form-control" value="1" min="1" max="@Model.Stock" style="max-width: 70px;" />
                                                <button type="submit" class="btn btn-success">
                                                    <i class="fas fa-shopping-cart me-1"></i> Add to Cart
                                                </button>
                                            </div>
                                        </form>
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary" disabled>
                                            <i class="fas fa-shopping-cart me-1"></i> Out of Stock
                                        </button>
                                    }
                                </div>
                            }

                            @if (User.Identity?.IsAuthenticated == true && User.IsInRole("Member"))
                            {
                                var isBookmarked = await BookmarkService.IsBookmarkedByUserAsync(Model.BookId, 
                                    Guid.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)));
                                
                                <div>
                                    @if (isBookmarked)
                                    {
                                        <form asp-action="Remove" asp-controller="Bookmark" asp-route-id="@Model.BookId" 
                                             asp-route-returnUrl="@Context.Request.Path" method="post">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-danger">
                                                <i class="fas fa-heart-broken me-1"></i> Remove from Wishlist
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-action="Add" asp-controller="Bookmark" asp-route-id="@Model.BookId" 
                                             asp-route-returnUrl="@Context.Request.Path" method="post">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-primary">
                                                <i class="fas fa-heart me-1"></i> Add to Wishlist
                                            </button>
                                        </form>
                                    }
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Reviews Section -->
                    <div class="row mb-4 mt-4">
                        <div class="col-12">
                            <h4>Customer Reviews</h4>
                            <div class="d-flex align-items-center mb-3">
                                <div class="me-3">
                                    @{
                                        double avgRating = (double)ViewData["AverageRating"];
                                        int reviewCount = (int)ViewData["ReviewCount"];
                                        
                                        for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Floor(avgRating))
                                            {
                                                <i class="fas fa-star text-warning"></i>
                                            }
                                            else if (i - avgRating < 1 && i - avgRating > 0)
                                            {
                                                <i class="fas fa-star-half-alt text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="far fa-star text-warning"></i>
                                            }
                                        }
                                    }
                                </div>
                                <div>
                                    <span class="fw-bold">@avgRating.ToString("0.0")</span> out of 5
                                    <span class="text-muted">(@reviewCount @(reviewCount == 1 ? "review" : "reviews"))</span>
                                </div>
                            </div>

                            @if (reviewCount > 0)
                            {
                                <div class="list-group">
                                   @foreach (var review in (List<ReviewDTO>)ViewData["RecentReviews"])
                                    {
                                        <div class="list-group-item border-0 border-bottom">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    <h6 class="mb-0">@review.UserName</h6>
                                                    <small class="text-muted">@review.ReviewDate.ToString("MMMM dd, yyyy")</small>
                                                </div>
                                                <div>
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <i class="@(i <= review.Rating ? "fas" : "far") fa-star text-warning small"></i>
                                                    }
                                                </div>
                                            </div>
                                            @if (!string.IsNullOrEmpty(review.Comment))
                                            {
                                                <p class="mt-2 mb-0">@review.Comment</p>
                                            }
                                        </div>
                                    }
                                </div>
                                
                                @if (reviewCount > 5)
                                {
                                    <div class="text-center mt-3">
                                        <button class="btn btn-outline-primary" id="showAllReviews">
                                            View all @reviewCount reviews
                                        </button>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="alert alert-light">
                                    This book hasn't been reviewed yet.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-between">
                @if (User.IsInRole("Admin") || User.IsInRole("Staff"))
                {
                    <a asp-controller="Book" asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to List
                    </a>
                }
                else
                {
                    <a asp-controller="Shop" asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Shop
                    </a>
                }
                @if (User.IsInRole("Admin"))
                {
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.BookId" class="btn btn-primary">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        @if (discountInfo != null)
                        {
                            <a asp-controller="Discount" asp-action="Edit" asp-route-id="@discountInfo.DiscountId" class="btn btn-warning">
                                <i class="fas fa-tag"></i> Edit Discount
                            </a>
                        }
                        else
                        {
                            <a asp-controller="Discount" asp-action="Create" asp-route-bookId="@Model.BookId" class="btn btn-success">
                                <i class="fas fa-tag"></i> Add Discount
                            </a>
                        }
                        <!-- Update the delete button to work with the modal -->
                        <button type="button" class="btn btn-danger delete-book" 
                                data-id="@Model.BookId" data-title="@Model.Title">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Include the delete modal partial -->
<partial name="_DeleteBookModal" />

@section Scripts {
    @Html.AntiForgeryToken()
    <script>
        $(document).ready(function() {
            // Set up delete modal with event delegation for dynamic content
            $(document).on('click', '.delete-book', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                var id = $(this).data('id');
                var title = $(this).data('title');
                
                // Set the form action and book info in the modal
                $('#deleteBookForm').attr('action', '@Url.Action("Delete", "Book")/' + id);
                $('#delete-book-title').text(title);
                
                // Show the modal
                $('#deleteBookModal').modal('show');
            });
        });
    </script>
}