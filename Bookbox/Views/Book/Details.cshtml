@model Bookbox.Models.Book
@inject Bookbox.Services.Interfaces.IDiscountService DiscountService
@inject Bookbox.Services.Interfaces.IBookmarkService BookmarkService
@using System.Security.Claims
@using Bookbox.DTOs
@{
    ViewData["Title"] = Model.Title;
    var discountInfo = await DiscountService.GetActiveDiscountForBookAsync(Model.BookId);
    var isAdmin = User.IsInRole("Admin");
    var isStaff = User.IsInRole("Staff");
    var isMember = User.IsInRole("Member");
    var discountedPrice = discountInfo != null ? 
        DiscountService.CalculateDiscountedPrice(Model.Price, discountInfo.DiscountPercentage) : 
        Model.Price;
    var daysRemaining = discountInfo?.EndDate != null ? 
        DiscountService.GetRemainingDays(discountInfo.EndDate) : 
        -1;
    
    // Move these declarations up here
    double avgRating = (double)ViewData["AverageRating"];
    int reviewCount = (int)ViewData["ReviewCount"];
    
    // Set the layout based on user role
    if (isAdmin || isStaff)
    {
        Layout = "_DashboardLayout";
    }
    // else use the default _Layout.cshtml
}

<!-- Add a data attribute to the main container for JavaScript to detect coming soon status -->
<div id="bookDetails" data-is-coming-soon="@Model.IsComingSoon.ToString().ToLower()" class="container-fluid mt-5">

    <!-- Main Book Details Card -->
    <div class="card shadow-sm rounded-3 border-0 mb-5">
        <div class="card-header py-3 bg-gradient" style="background-color: #f8f9fa; border-bottom: none;">
            <h4 class="mb-0 fw-bold">@Model.Title</h4>
        </div>
        <div class="card-body py-4">
            <div class="row">
                <!-- Book Cover Column -->
                <div class="col-md-3 text-center">
                    <div class="position-relative mb-4">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" alt="@Model.Title" class="img-fluid rounded-3 shadow-sm" style="max-height: 350px; object-fit: contain;" />
                        }
                        else
                        {
                            <div class="bg-light rounded-3 p-5 mb-3 d-flex flex-column align-items-center justify-content-center" style="min-height: 350px;">
                                <i class="fas fa-book fa-5x text-secondary mb-3"></i>
                                <p class="text-muted">No cover image available</p>
                            </div>
                        }
                        @if (Model.Stock > 0)
                        {
                            <span class="badge bg-success position-absolute top-0 end-0 m-2 px-3 py-2 rounded-pill shadow-sm stock-badge">
                                In Stock (@Model.Stock)
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-danger position-absolute top-0 end-0 m-2 px-3 py-2 rounded-pill shadow-sm stock-badge">
                                Out of Stock
                            </span>
                        }
                    </div>
                    
                    <!-- Coming Soon badge -->
                    @if (Model.IsComingSoon)
                    {
                        <span class="badge bg-warning text-dark p-2 rounded-3 d-inline-block mb-3">
                            <i class="fas fa-clock me-2"></i> Coming Soon
                        </span>
                    }
                    
                    @if (!Model.IsComingSoon)
                    {
                        @if (discountInfo != null)
                        {
                            <div class="price-tag bg-danger text-white p-2 rounded-3 d-inline-block mb-3">
                                <div class="d-flex align-items-center">
                                    <div>
                                        <small class="d-block text-white-50"><s>NPR @Model.Price.ToString("F2")</s></small>
                                        <span class="fs-5 fw-bold">NPR @discountedPrice.ToString("F2")</span>
                                    </div>
                                    <div class="ms-2 px-2 py-1 bg-white text-danger rounded-pill fw-bold">
                                        @discountInfo.DiscountPercentage%
                                    </div>
                                </div>
                                @if (daysRemaining > 0)
                                {
                                    <small class="d-block mt-1">Sale ends in @daysRemaining days</small>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="price-tag bg-primary p-2 rounded-3 d-inline-block mb-3">
                                <span class="fs-5 fw-bold text-white">NPR @Model.Price.ToString("F2")</span>
                            </div>
                        }
                    }
                </div>
                
                <!-- Book Details Column -->
                <div class="col-md-9">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="text-muted small text-uppercase">Author</span>
                                <p class="fs-5">@Model.Author</p>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="text-muted small text-uppercase">Genre</span>
                                <p class="fs-5">@Model.Genre</p>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="text-muted small text-uppercase">Format</span>
                                <p>@Model.Format</p>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="text-muted small text-uppercase">Publisher</span>
                                <p>@Model.Publisher</p>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="text-muted small text-uppercase">ISBN</span>
                                <p>@Model.ISBN</p>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="text-muted small text-uppercase">Publication Date</span>
                                <p>@Model.PublicationDate.ToString("MMMM dd, yyyy")</p>
                            </div>
                        </div>
                        
                        <div class="col-md-6 physical-stock">
                            <div class="detail-item">
                                <span class="text-muted small text-uppercase">Physical Stock</span>
                                <p>@Model.PhysicalStock</p>
                            </div>
                        </div>

                        @if (Model.IsComingSoon)
                        {
                            <div class="col-12">
                                <div class="alert alert-warning rounded-3 border-0 coming-soon-message">
                                    <i class="fas fa-clock me-2"></i> This title is coming soon and will be available for purchase upon release.
                                </div>
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.Awards))
                        {
                            <div class="col-12">
                                <div class="detail-item">
                                    <span class="text-muted small text-uppercase">Awards</span>
                                    <p>@Model.Awards</p>
                                </div>
                            </div>
                        }
                    </div>
                    
                    <hr class="my-4" />
                    
                    <!-- Description -->
                    <div class="detail-item mb-4">
                        <span class="text-muted small text-uppercase">Description</span>
                        <p class="text-justify lh-lg">@Model.Description</p>
                    </div>

                    <!-- Book actions section - Add to Cart and Wishlist buttons -->
                    <div class="d-flex flex-wrap gap-3 align-items-center mt-4">
                        @if (User.Identity?.IsAuthenticated == true && User.IsInRole("Member"))
                        {
                            @if (Model.Stock > 0)
                            {
                                <form asp-controller="Cart" asp-action="AddToCart" method="post" class="add-to-cart-form">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="bookId" value="@Model.BookId" />
                                    <input type="hidden" name="price" value="@discountedPrice" />
                                    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                                    
                                    <div class="input-group">
                                        <input type="number" name="quantity" class="form-control" value="1" min="1" max="@Model.Stock" style="max-width: 70px;" />
                                        <button type="submit" class="btn btn-success rounded-end">
                                            <i class="fas fa-shopping-cart me-1"></i> Add to Cart
                                        </button>
                                    </div>
                                </form>
                            }
                            else
                            {
                                <button class="btn btn-secondary add-to-cart-form" disabled>
                                    <i class="fas fa-shopping-cart me-1"></i> Out of Stock
                                </button>
                            }

                            var isBookmarked = await BookmarkService.IsBookmarkedByUserAsync(Model.BookId, 
                            Guid.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)));
                            
                            @if (isBookmarked)
                            {
                                <form asp-action="Remove" asp-controller="Bookmark" asp-route-id="@Model.BookId" 
                                     asp-route-returnUrl="@Context.Request.Path" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-danger">
                                        <i class="fas fa-heart-broken me-1"></i> Remove from Wishlist
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="Add" asp-controller="Bookmark" asp-route-id="@Model.BookId" 
                                     asp-route-returnUrl="@Context.Request.Path" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-primary">
                                        <i class="fas fa-heart me-1"></i> Add to Wishlist
                                    </button>
                                </form>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>        <div class="card-footer bg-white py-3">
            <div class="d-flex justify-content-between">
                @if (User.IsInRole("Admin"))
                {
                    <a asp-controller="Admin" asp-action="Dashboard" class="btn btn-light rounded-pill px-4">
                        <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
                    </a>
                }
                else if (User.IsInRole("Staff"))
                {
                    <a asp-controller="Staff" asp-action="Dashboard" class="btn btn-light rounded-pill px-4">
                        <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
                    </a>
                }
                else
                {
                    <a asp-controller="Shop" asp-action="Index" class="btn btn-light rounded-pill px-4">
                        <i class="fas fa-arrow-left me-1"></i> Back to Shop
                    </a>
                }
                @if (User.IsInRole("Admin"))
                {
                    <div class="btn-group">
                        <a asp-action="Edit" asp-route-id="@Model.BookId" class="btn btn-primary">
                            <i class="fas fa-edit me-1"></i> Edit
                        </a>
                        @if (discountInfo != null)
                        {
                            <a asp-controller="Discount" asp-action="Edit" asp-route-id="@discountInfo.DiscountId" class="btn btn-warning">
                                <i class="fas fa-tag me-1"></i> Edit Discount
                            </a>
                        }
                        else
                        {
                            <a asp-controller="Discount" asp-action="Create" asp-route-bookId="@Model.BookId" class="btn btn-success">
                                <i class="fas fa-tag me-1"></i> Add Discount
                            </a>
                        }
                        <button type="button" class="btn btn-danger delete-book" 
                                data-id="@Model.BookId" data-title="@Model.Title">
                            <i class="fas fa-trash me-1"></i> Delete
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Customer Reviews Card -->
    <div class="card shadow-sm rounded-3 border-0 mb-5">
        <div class="card-header py-3 bg-gradient d-flex justify-content-between align-items-center" style="background-color: #f8f9fa; border-bottom: none;">
            <h5 class="mb-0 fw-bold"><i class="fas fa-star text-warning me-2"></i>Customer Reviews</h5>
            <span class="badge bg-primary rounded-pill px-3 py-2">@reviewCount @(reviewCount == 1 ? "review" : "reviews")</span>
        </div>
        <div class="card-body p-4">
            

            @if (reviewCount > 0)
            {
                <div class="reviews-container">
                    @foreach (var review in (List<ReviewDTO>)ViewData["RecentReviews"])
                    {
                        <div class="review-item p-3 mb-3 rounded-3 bg-light bg-opacity-50">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="d-flex">
                                    <div class="me-3">
                                        @if (!string.IsNullOrEmpty(review.UserImageUrl))
                                        {
                                            <img src="@review.UserImageUrl" class="rounded-circle shadow-sm" alt="@review.UserName" width="50" height="50" style="object-fit: cover;" />
                                        }
                                        else
                                        {
                                            <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center shadow-sm" style="width: 50px; height: 50px;">
                                                <i class="fas fa-user"></i>
                                            </div>
                                        }
                                    </div>
                                    <div>
                                        <h6 class="fw-bold mb-0">@review.UserName</h6>
                                        <div class="text-muted small">@review.ReviewDate.ToString("MMMM dd, yyyy")</div>
                                        <div class="mt-1">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="@(i <= review.Rating ? "fas" : "far") fa-star text-warning small"></i>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(review.Comment))
                            {
                                <div class="mt-3">
                                    <p class="mb-0">@review.Comment</p>
                                </div>
                            }
                        </div>
                    }
                </div>
                
                @if (reviewCount > 5)
                {
                    <div class="text-center mt-4">
                        <button class="btn btn-outline-primary rounded-pill px-4" id="showAllReviews" data-book-id="@Model.BookId">
                            <i class="fas fa-comments me-1"></i> View all @reviewCount reviews
                        </button>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-light border-0 rounded-3 text-center p-4">
                    <i class="fas fa-comment-slash fa-2x mb-3 text-muted"></i>
                    <p class="mb-0">This book hasn't been reviewed yet.</p>
                </div>
            }
        </div>
    </div>

    <!-- Recommended Books Card -->
    <div class="card shadow-sm rounded-3 border-0 mb-4">
        <div class="card-header py-3 bg-gradient" style="background-color: #f8f9fa; border-bottom: none;">
            <h5 class="mb-0 fw-bold"><i class="fas fa-book-reader me-2"></i>You Might Also Like</h5>
        </div>
        <div class="card-body p-4">
            @{
                var recommendedBooks = (List<Bookbox.Models.Book>)ViewData["RecommendedBooks"];
            }
            
            @if (recommendedBooks != null && recommendedBooks.Any())
            {
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
                    @foreach (var book in recommendedBooks)
                    {
                        <div class="col">
                            @{
                                ViewData["HorizontalLayout"] = false;
                                ViewData["ShowAdminControls"] = false;
                            }
                            <partial name="_BookCard" model="book" view-data="ViewData" />
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-light text-center p-4 border-0 rounded-3">
                    <i class="fas fa-search fa-2x mb-3 text-muted"></i>
                    <p class="mb-0">No similar books found in this genre.</p>
                </div>
            }
        </div>
    </div>

    <!-- Include the delete modal partial -->
    <partial name="_DeleteBookModal" />

    <!-- All Reviews Modal -->
    <div class="modal fade" id="allReviewsModal" tabindex="-1" aria-labelledby="allReviewsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable">
            <div class="modal-content border-0 shadow">
                <div class="modal-header bg-light">
                    <h5 class="modal-title" id="allReviewsModalLabel">All Reviews for @Model.Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="d-flex align-items-center mb-4 pb-2 border-bottom">
                        <div class="me-3 fs-3">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= Math.Floor(avgRating))
                                {
                                    <i class="fas fa-star text-warning"></i>
                                }
                                else if (i - avgRating < 1 && i - avgRating > 0)
                                {
                                    <i class="fas fa-star-half-alt text-warning"></i>
                                }
                                else
                                {
                                    <i class="far fa-star text-warning"></i>
                                }
                            }
                        </div>
                        <div>
                            <span class="display-6 fw-bold">@avgRating.ToString("0.0")</span>
                            <span class="text-muted">out of 5</span>
                            <span class="text-muted">(@reviewCount total reviews)</span>
                        </div>
                    </div>
                    <div class="list-group list-group-flush" id="allReviewsList">
                        <!-- Reviews will be loaded here via AJAX -->
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary rounded-pill" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/bookDetails.js" asp-append-version="true"></script>
    <script>
        // Add any page-specific data that needs to be set from Razor
        $(document).ready(function() {
            // Add book ID as data attribute to the showAllReviews button
            $('#showAllReviews').data('book-id', '@Model.BookId');
        });
    </script>
}

<style>
    .detail-item {
        margin-bottom: 0.5rem;
    }
    
    .detail-item .text-uppercase {
        font-size: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
    }
    
    .detail-item p {
        margin-bottom: 0;
        margin-top: 0.25rem;
    }
    
    .review-item {
        transition: all 0.2s ease;
    }
    
    .review-item:hover {
        background-color: #f8f9fa !important;
    }
    
    .modal-dialog-scrollable .modal-content {
        max-height: 90vh;
    }
</style>