@model IEnumerable<Bookbox.Models.Book>
@inject Bookbox.Services.Interfaces.IDiscountService DiscountService

@{
    ViewData["Title"] = "Book Management";
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    int totalItems = ViewData["TotalItems"] != null ? (int)ViewData["TotalItems"] : 0;
    Layout = "_DashboardLayout";
    
    // Create parameters for sidebar partial
    var sidebarParams = new Dictionary<string, object>
    {
        { "Controller", "Book" },
        { "Category", ViewData["Category"] },
        { "SortBy", ViewData["SortBy"] },
        { "SearchTerm", ViewData["SearchTerm"] },
        { "SelectedGenre", ViewData["SelectedGenre"] },
        { "SelectedFormat", ViewData["SelectedFormat"] },
        { "MinPrice", ViewData["MinPrice"] },
        { "MaxPrice", ViewData["MaxPrice"] },
        { "InStock", ViewData["InStock"] }
    };
}

<div class="container-fluid mt-4 mb-5">
    <div class="row">
        <!-- Left Sidebar with Filters -->
        <div class="col-lg-3">
            <partial name="_FilterSidebar" model="sidebarParams" />
        </div>
        
        <!-- Main Content Area -->
        <div class="col-lg-9">
            <!-- Results Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">Book Management</h1>
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show mt-2" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    <p class="text-muted mt-2">
                        @if (Model != null && Model.Any())
                        {
                            <span>Showing @Model.Count() book@(Model.Count() != 1 ? "s" : "")</span>
                            @if (!string.IsNullOrEmpty(ViewData["SearchTerm"]?.ToString()))
                            {
                                <span>for "<strong>@ViewData["SearchTerm"]</strong>"</span>
                            }
                        }
                    </p>
                </div>
                <div class="d-flex align-items-center">
                    <label for="sortBy" class="me-2">Sort by:</label>
                    <select id="sortBy" name="sortBy" class="form-select" style="width: auto;" onchange="updateSort(this.value)">
                        <option value="newest" selected="@(ViewData["SortBy"]?.ToString() == "newest")">Newest Arrivals</option>
                        <option value="bestselling" selected="@(ViewData["SortBy"]?.ToString() == "bestselling")">Bestselling</option>
                        <option value="title" selected="@(ViewData["SortBy"]?.ToString() == "title")">Title (A-Z)</option>
                        <option value="price_asc" selected="@(ViewData["SortBy"]?.ToString() == "price_asc")">Price (Low to High)</option>
                        <option value="price_desc" selected="@(ViewData["SortBy"]?.ToString() == "price_desc")">Price (High to Low)</option>
                    </select>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Create" class="btn btn-primary ms-3">
                            <i class="fas fa-plus"></i> Add Book
                        </a>
                    }
                </div>
            </div>

            <!-- Books Grid -->
            @if (Model != null && Model.Any())
            {
                <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
                    @foreach (var book in Model)
                    {
                        <div class="col">
                            @{
                                ViewData["HorizontalLayout"] = true;
                                ViewData["ShowAdminControls"] = User.IsInRole("Admin");
                            }
                            <partial name="_BookCard" model="book" view-data="ViewData" />
                        </div>
                    }
                </div>
                
                <!-- Pagination -->
                @if (totalPages > 1)
                {
                    <nav class="mt-4" aria-label="Book pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Book", new { page = currentPage - 1, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                    Previous
                                </a>
                            </li>
                            
                            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", "Book", new { page = i, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                        @i
                                    </a>
                                </li>
                            }
                            
                            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Book", new { page = currentPage + 1, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                    Next
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-book fa-4x text-muted mb-3"></i>
                    <h4>No books found</h4>
                    <p class="text-muted">
                        @if (ViewData["SearchTerm"] != null || ViewData["SelectedGenre"] != null || ViewData["SelectedFormat"] != null)
                        {
                            <span>No books match the search term "@ViewData["SearchTerm"]"</span>
                            <br />
                            <a asp-action="Index" class="btn btn-outline-primary mt-3">Clear Search</a>
                        }
                        else
                        {
                            <span>No books have been added to the system yet.</span>
                            @if (User.IsInRole("Admin"))
                            {
                                <br />
                                <a asp-action="Create" class="btn btn-outline-primary mt-3">Add Your First Book</a>
                            }
                        }
                    </p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateSort(sortValue) {
            // Get current URL
            var url = new URL(window.location.href);
            
            // Update or add sort parameter
            url.searchParams.set('sortBy', sortValue);
            
            // Make sure we preserve category
            var category = '@ViewData["Category"]';
            if (category) {
                url.searchParams.set('category', category);
            }
            
            // Redirect to new URL
            window.location.href = url.toString();
        }
        
        $(document).ready(function() {
            // Set up delete modal with event delegation for dynamic content
            $(document).on('click', '.delete-book', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                var id = $(this).data('id');
                var title = $(this).data('title');
                
                // Set the form action and book info in the modal
                $('#deleteBookForm').attr('action', '@Url.Action("Delete", "Book")/' + id);
                $('#delete-book-title').text(title);
                
                // Show the modal
                $('#deleteBookModal').modal('show');
            });
            
            // Check for success message and show modal for admins
            const isAdmin = @(User.IsInRole("Admin") ? "true" : "false");
            const successMessage = $('#successMessage').val();
            if (isAdmin && successMessage && successMessage.length > 0) {
                // Set the message in the modal
                $('.modal-message').text(successMessage);
                
                // Create and show modal with a slight delay for better UX
                setTimeout(() => {
                    const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                    successModal.show();
                }, 500);
            }
        });
    </script>
}

@section Styles {
    <style>
        .success-icon-container {
            width: 100px;
            height: 100px;
            background-color: rgba(40, 167, 69, 0.1);
            border-radius: 50%;
            margin: 0 auto;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .modal-message {
            color: #495057;
        }
    </style>
}

<!-- Include the delete modal partial -->
<partial name="_DeleteBookModal" />

<!-- Success Message Modal -->
@if (User.IsInRole("Admin"))
{
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <div class="modal-header bg-success text-white border-0">
                    <h5 class="modal-title" id="successModalLabel">
                        <i class="fas fa-check-circle me-2"></i>Success
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="text-center mb-4">
                        <div class="success-icon-container mb-3">
                            <i class="fas fa-book-open fa-4x text-success"></i>
                        </div>
                        <h4 class="modal-message"></h4>
                    </div>
                </div>
                <div class="modal-footer border-0 justify-content-center">
                    <button type="button" class="btn btn-primary px-4" data-bs-dismiss="modal">Continue</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Hidden input to store success message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <input type="hidden" id="successMessage" value="@TempData["SuccessMessage"]" />
    }
}