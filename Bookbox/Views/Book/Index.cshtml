@model IEnumerable<Bookbox.Models.Book>
@inject Bookbox.Services.Interfaces.IDiscountService DiscountService

@{
    ViewData["Title"] = "Book Management";
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    int totalItems = ViewData["TotalItems"] != null ? (int)ViewData["TotalItems"] : 0;
    
    // Create parameters for sidebar partial
    var sidebarParams = new Dictionary<string, object>
    {
        { "Controller", "Book" },
        { "Category", ViewData["Category"] },
        { "SortBy", ViewData["SortBy"] },
        { "SearchTerm", ViewData["SearchTerm"] },
        { "SelectedGenre", ViewData["SelectedGenre"] },
        { "SelectedFormat", ViewData["SelectedFormat"] },
        { "MinPrice", ViewData["MinPrice"] },
        { "MaxPrice", ViewData["MaxPrice"] },
        { "InStock", ViewData["InStock"] }
    };
}

<div class="container-fluid mt-4 mb-5">
    <div class="row">
        <!-- Left Sidebar with Filters -->
        <div class="col-lg-3">
            <partial name="_FilterSidebar" model="sidebarParams" />
        </div>
        
        <!-- Main Content Area -->
        <div class="col-lg-9">
            <!-- Results Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">Book Management</h1>
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show mt-2" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    <p class="text-muted mt-2">
                        @if (Model != null && Model.Any())
                        {
                            <span>Showing @Model.Count() book@(Model.Count() != 1 ? "s" : "")</span>
                            @if (!string.IsNullOrEmpty(ViewData["SearchTerm"]?.ToString()))
                            {
                                <span>for "<strong>@ViewData["SearchTerm"]</strong>"</span>
                            }
                        }
                    </p>
                </div>
                <div class="d-flex align-items-center">
                    <label for="sortBy" class="me-2">Sort by:</label>
                    <select id="sortBy" name="sortBy" class="form-select" style="width: auto;" onchange="updateSort(this.value)">
                        <option value="newest" selected="@(ViewData["SortBy"]?.ToString() == "newest")">Newest Arrivals</option>
                        <option value="bestselling" selected="@(ViewData["SortBy"]?.ToString() == "bestselling")">Bestselling</option>
                        <option value="title" selected="@(ViewData["SortBy"]?.ToString() == "title")">Title (A-Z)</option>
                        <option value="price_asc" selected="@(ViewData["SortBy"]?.ToString() == "price_asc")">Price (Low to High)</option>
                        <option value="price_desc" selected="@(ViewData["SortBy"]?.ToString() == "price_desc")">Price (High to Low)</option>
                    </select>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Create" class="btn btn-primary ms-3">
                            <i class="fas fa-plus"></i> Add Book
                        </a>
                    }
                </div>
            </div>

            <!-- Books Grid -->
            @if (Model != null && Model.Any())
            {
                <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4">
                    @foreach (var book in Model)
                    {
                        <div class="col">
                            <div class="card h-100 book-card">
                                <div class="row g-0">
                                    <div class="col-md-4">
                                        <div class="card-img-container h-100">
                                            @if (!string.IsNullOrEmpty(book.ImageUrl))
                                            {
                                                <img src="@book.ImageUrl" class="img-fluid rounded-start" alt="@book.Title">
                                            }
                                            else
                                            {
                                                <div class="placeholder-image h-100">
                                                    <i class="fas fa-book fa-3x text-secondary"></i>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="card-body">
                                            <h5 class="card-title book-title">@book.Title</h5>
                                            <p class="card-text book-author">by @book.Author</p>
                                            <p class="card-text mb-1">
                                                <span class="badge bg-secondary">@book.Genre</span>
                                                <span class="badge bg-info">@book.Format</span>
                                            </p>
                                            
                                            <div class="mb-2">
                                                @{
                                                    var bookDiscount = await DiscountService.GetActiveDiscountForBookAsync(book.BookId);
                                                    var discountedPrice = bookDiscount != null ? 
                                                        DiscountService.CalculateDiscountedPrice(book.Price, bookDiscount.DiscountPercentage) : book.Price;
                                                    var daysRemaining = bookDiscount?.EndDate != null ? 
                                                        DiscountService.GetRemainingDays(bookDiscount.EndDate) : -1;
                                                }
                                                
                                                @if (bookDiscount != null)
                                                {
                                                    <div>
                                                        <span class="text-muted"><s>NPR @book.Price.ToString("F2")</s></span>
                                                        <span class="text-danger">NPR @discountedPrice.ToString("F2")</span>
                                                        <span class="badge bg-danger ms-1">ON SALE</span>
                                                        @if (daysRemaining > 0)
                                                        {
                                                            <span class="badge bg-warning ms-1">@daysRemaining days</span>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span>NPR @book.Price.ToString("F2")</span>
                                                }
                                            </div>
                                            
                                            <p class="mb-1">
                                                <span class="badge @(book.Stock > 0 ? "bg-success" : "bg-danger") text-white">
                                                    @(book.Stock > 0 ? $"In Stock ({book.Stock})" : "Out of Stock")
                                                </span>
                                            </p>
                                            
                                            @if (book.Discounts.Any(d => d.IsOnSale && d.StartDate <= DateTime.UtcNow && (d.EndDate == null || d.EndDate > DateTime.UtcNow)))
                                            {
                                                var discount = book.Discounts.First(d => d.IsOnSale && d.StartDate <= DateTime.UtcNow && (d.EndDate == null || d.EndDate > DateTime.UtcNow));
                                                <div class="position-absolute top-0 end-0 d-flex">
                                                    <span class="badge bg-danger me-1">ON SALE</span>
                                                    @if (discount.EndDate.HasValue)
                                                    {
                                                        var badgeDaysRemaining = (discount.EndDate.Value - DateTime.UtcNow).Days;
                                                        <span class="badge bg-warning text-dark">@badgeDaysRemaining @(badgeDaysRemaining == 1 ? "day" : "days") left</span>
                                                    }
                                                </div>
                                            }

                                            <div class="d-flex mt-2 gap-2">
                                                <a asp-action="Details" asp-route-id="@book.BookId" 
                                                   class="btn btn-sm btn-info" title="Details">
                                                    <i class="fas fa-info-circle"></i> Details
                                                </a>
                                                @if (User.IsInRole("Admin"))
                                                {
                                                    <a asp-action="Edit" asp-route-id="@book.BookId" 
                                                       class="btn btn-sm btn-primary" title="Edit">
                                                        <i class="fas fa-edit"></i> Edit
                                                    </a>
                                                    <a asp-controller="Discount" asp-action="@(bookDiscount != null ? "Edit" : "Create")" 
                                                       asp-route-id="@(bookDiscount?.DiscountId)" asp-route-bookId="@book.BookId"
                                                       class="btn btn-sm @(bookDiscount != null ? "btn-warning" : "btn-success")">
                                                        <i class="fas fa-tag"></i> @(bookDiscount != null ? "Edit Discount" : "Add Discount")
                                                    </a>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                <!-- Pagination -->
                @if (totalPages > 1)
                {
                    <nav class="mt-4" aria-label="Book pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Book", new { page = currentPage - 1, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                    Previous
                                </a>
                            </li>
                            
                            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", "Book", new { page = i, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                        @i
                                    </a>
                                </li>
                            }
                            
                            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Book", new { page = currentPage + 1, searchTerm = ViewData["SearchTerm"], genre = ViewData["SelectedGenre"], format = ViewData["SelectedFormat"], minPrice = ViewData["MinPrice"], maxPrice = ViewData["MaxPrice"], sortBy = ViewData["SortBy"], category = ViewData["Category"] })">
                                    Next
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-book fa-4x text-muted mb-3"></i>
                    <h4>No books found</h4>
                    <p class="text-muted">
                        @if (ViewData["SearchTerm"] != null || ViewData["SelectedGenre"] != null || ViewData["SelectedFormat"] != null)
                        {
                            <span>No books match the search term "@ViewData["SearchTerm"]"</span>
                            <br />
                            <a asp-action="Index" class="btn btn-outline-primary mt-3">Clear Search</a>
                        }
                        else
                        {
                            <span>No books have been added to the system yet.</span>
                            @if (User.IsInRole("Admin"))
                            {
                                <br />
                                <a asp-action="Create" class="btn btn-outline-primary mt-3">Add Your First Book</a>
                            }
                        }
                    </p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateSort(sortValue) {
            // Get current URL
            var url = new URL(window.location.href);
            
            // Update or add sort parameter
            url.searchParams.set('sortBy', sortValue);
            
            // Make sure we preserve category
            var category = '@ViewData["Category"]';
            if (category) {
                url.searchParams.set('category', category);
            }
            
            // Redirect to new URL
            window.location.href = url.toString();
        }
    </script>
}