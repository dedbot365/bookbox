@model Dictionary<string, object>

@{
    // Extract parameters from model
    string controller = Model["Controller"].ToString();
    string category = Model["Category"]?.ToString();
    string sortBy = Model["SortBy"]?.ToString();
    string searchTerm = Model["SearchTerm"]?.ToString();
    string selectedGenre = Model["SelectedGenre"]?.ToString();
    string selectedFormat = Model["SelectedFormat"]?.ToString(); 
    decimal? minPrice = Model["MinPrice"] as decimal?;
    decimal? maxPrice = Model["MaxPrice"] as decimal?;
    bool? inStock = Model["InStock"] as bool?;
    bool showAdminCategories = Model.ContainsKey("ShowAdminCategories") ? (bool)Model["ShowAdminCategories"] : false;
}

<!-- Link to the CSS file -->
<link rel="stylesheet" href="~/css/filter-sidebar.css" />

<!-- Book Filters -->
<div class="book-filters">
    <div class="card shadow-sm mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0 text-white">
                <i class="fas fa-filter me-2"></i>Filters
            </h5>
            <button class="btn btn-sm text-white d-lg-none" id="filterToggle" type="button">
                <i class="fas fa-chevron-down"></i>
            </button>
        </div>
        <div class="card-body" id="filterContent">
            <form asp-action="Index" asp-controller="@controller" method="get" id="filterForm">
                <!-- Preserve category in form -->
                @if (!string.IsNullOrEmpty(category))
                {
                    <input type="hidden" name="category" value="@category" />
                }
                
                <!-- Preserve sorting -->
                @if (!string.IsNullOrEmpty(sortBy))
                {
                    <input type="hidden" name="sortBy" value="@sortBy" />
                }
                
                <!-- Search -->
                <div class="mb-4">
                    <label for="searchTerm" class="form-label fw-bold">Search</label>
                    <div class="input-group">
                        <span class="input-group-text bg-white border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" class="form-control with-icon border-start-0" 
                               id="searchTerm" name="searchTerm" 
                               placeholder="Title, author, ISBN..." value="@searchTerm">
                    </div>
                </div>
                
                <hr />
                
                <!-- Genre -->
                <div class="mb-4">
                    <label for="genre" class="form-label fw-bold">Genre</label>
                    <div class="input-group">
                        <span class="input-group-text bg-white border-end-0">
                            <i class="fas fa-book text-muted"></i>
                        </span>
                        <select class="form-select with-icon border-start-0" id="genre" name="genre">
                            <option value="">All Genres</option>
                            @foreach (var genre in Enum.GetValues(typeof(Bookbox.Constants.Genre)))
                            {
                                <option value="@genre" selected="@(selectedGenre == genre.ToString())">
                                    @genre
                                </option>
                            }
                        </select>
                    </div>
                </div>
                
                <!-- Format -->
                <div class="mb-4">
                    <label for="format" class="form-label fw-bold">Format</label>
                    <div class="input-group">
                        <span class="input-group-text bg-white border-end-0">
                            <i class="fas fa-file-alt text-muted"></i>
                        </span>
                        <select class="form-select with-icon border-start-0" id="format" name="format">
                            <option value="">All Formats</option>
                            @foreach (var format in Enum.GetValues(typeof(Bookbox.Constants.Format)))
                            {
                                <option value="@format" selected="@(selectedFormat == format.ToString())">
                                    @format
                                </option>
                            }
                        </select>
                    </div>
                </div>
                
                <!-- Price Range -->
                <div class="mb-4">
                    <label class="form-label fw-bold">Price Range</label>
                    <div class="row g-2">
                        <div class="col">
                            <label for="minPrice" class="form-label small">Min</label>
                            <div class="input-group">
                                <span class="input-group-text bg-white border-end-0">
                                    <i class="fas fa-tag text-muted"></i>
                                </span>
                                <input type="number" class="form-control with-icon border-start-0" 
                                       name="minPrice" id="minPrice" 
                                       placeholder="0" min="0" step="0.01" value="@minPrice">
                            </div>
                        </div>
                        <div class="col">
                            <label for="maxPrice" class="form-label small">Max</label>
                            <div class="input-group">
                                <span class="input-group-text bg-white border-end-0">
                                    <i class="fas fa-tag text-muted"></i>
                                </span>
                                <input type="number" class="form-control with-icon border-start-0" 
                                       name="maxPrice" id="maxPrice" 
                                       placeholder="Max" min="0" step="0.01" value="@maxPrice">
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Stock Status -->
                <div class="mb-4">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="inStock" name="inStock" value="true" 
                               @(inStock == true ? "checked" : "")>
                        <label class="form-check-label" for="inStock">
                            In Stock Only
                        </label>
                    </div>
                </div>
                
                <div class="d-grid gap-3 mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-filter me-2"></i> Apply Filters
                    </button>
                    <a href="@Url.Action("Index", controller, new { category, sortBy })" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-2"></i> Clear Filters
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Categories Menu -->
<div class="book-categories">
    <div class="card shadow-sm">
        <div class="card-header text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-list me-2"></i>Categories
            </h5>
        </div>
        <div class="list-group list-group-flush">
            <a href="@Url.Action("Index", controller)" class="list-group-item list-group-item-action @(string.IsNullOrEmpty(category) ? "active" : "")">
                <i class="fas fa-book me-2"></i> All Books
            </a>
            <a href="@Url.Action("Index", controller, new { category = "bestsellers" })" class="list-group-item list-group-item-action @(category == "bestsellers" ? "active" : "")">
                <i class="fas fa-star me-2"></i> Bestsellers
            </a>
            <a href="@Url.Action("Index", controller, new { category = "best-rated" })" class="list-group-item list-group-item-action @(category == "best-rated" ? "active" : "")">
                <i class="fas fa-award me-2"></i> Best Rated Books
            </a>
            <a href="@Url.Action("Index", controller, new { category = "award-winners" })" class="list-group-item list-group-item-action @(category == "award-winners" ? "active" : "")">
                <i class="fas fa-trophy me-2"></i> Award Winners
            </a>
            <a href="@Url.Action("Index", controller, new { category = "new-releases" })" class="list-group-item list-group-item-action @(category == "new-releases" ? "active" : "")">
                <i class="fas fa-calendar-alt me-2"></i> New Releases
            </a>
            <a href="@Url.Action("Index", controller, new { category = "new-arrivals" })" class="list-group-item list-group-item-action @(category == "new-arrivals" ? "active" : "")">
                <i class="fas fa-box-open me-2"></i> New Arrivals
            </a>
            <a href="@Url.Action("Index", controller, new { category = "coming-soon" })" class="list-group-item list-group-item-action @(category == "coming-soon" ? "active" : "")">
                <i class="fas fa-clock me-2"></i> Coming Soon
            </a>
        </div>
    </div>
</div>

<!-- Include the JS file -->
<script src="~/js/filter-sidebar.js"></script>