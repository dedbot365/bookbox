@model IEnumerable<Bookbox.Models.User>
@{
    ViewData["Title"] = "Manage Users";
    Layout = "_DashboardLayout";
}

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0"><i class="fas fa-users me-2"></i> Manage Users</h2>
                </div>
                <div class="card-body">
                    <div class="alert alert-success alert-dismissible fade d-none" role="alert" id="successAlert">
                        <span id="successMessage"></span>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Contact</th>
                                    <th>Registered Date</th>
                                    <th>Orders</th>
                                    <th>Role</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(user.ImageUrlText))
                                                {
                                                    <img src="@user.ImageUrlText" alt="Profile" class="rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;">
                                                }
                                                else
                                                {
                                                    <div class="bg-secondary rounded-circle text-white d-flex align-items-center justify-content-center me-2" style="width: 40px; height: 40px;">
                                                        <i class="fas fa-user"></i>
                                                    </div>
                                                }
                                                <div>
                                                    @user.FirstName @user.LastName
                                                    <small class="d-block text-muted">@user.Username</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@user.Email</td>
                                        <td>@(string.IsNullOrEmpty(user.ContactNo) ? "Not provided" : user.ContactNo)</td>
                                        <td>@user.RegisteredDate.ToString("MMM d, yyyy")</td>
                                        <td>@user.SuccessfulOrderCount</td>
                                        <td>
                                            <select class="form-select role-select" data-user-id="@user.UserId.ToString("D")">
                                                <option value="2" selected="@(user.UserType == Bookbox.Constants.UserType.Member)">Member</option>
                                                <option value="3" selected="@(user.UserType == Bookbox.Constants.UserType.Staff)">Staff</option>
                                            </select>
                                        </td>
                                        <td>
                                            <a href="#" class="btn btn-sm btn-outline-primary view-user-btn" data-bs-toggle="tooltip" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- User Details Modal -->
<div class="modal fade" id="userDetailsModal" tabindex="-1" aria-labelledby="userDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="userDetailsModalLabel">User Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-4" id="userImageContainer">
                    <!-- User image will be inserted here -->
                </div>
                
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <h6 class="text-muted">Username</h6>
                        <p class="fw-bold" id="detailUsername"></p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <h6 class="text-muted">Full Name</h6>
                        <p class="fw-bold" id="detailFullName"></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <h6 class="text-muted">Email</h6>
                        <p id="detailEmail"></p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <h6 class="text-muted">Contact</h6>
                        <p id="detailContact"></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <h6 class="text-muted">Date of Birth</h6>
                        <p id="detailDOB"></p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <h6 class="text-muted">Gender</h6>
                        <p id="detailGender"></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <h6 class="text-muted">Role</h6>
                        <p id="detailRole"></p>
                    </div>
                    <div class="col-md-6 mb-3">
                        <h6 class="text-muted">Registered Date</h6>
                        <p id="detailRegisteredDate"></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 mb-3">
                        <h6 class="text-muted">Orders Completed</h6>
                        <p id="detailOrders"></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
            
            // Handle role changes
            document.querySelectorAll('.role-select').forEach(select => {
                select.addEventListener('change', function() {
                    const selectElement = this; // Store reference to the select element
                    const userId = this.getAttribute('data-user-id');
                    const roleValue = this.value;
                    const parentTD = this.parentElement; // Store the parent TD element
                    
                    // Show spinner in the select
                    const originalHtml = parentTD.innerHTML;
                    parentTD.innerHTML = '<div class="spinner-border spinner-border-sm text-primary" role="status"><span class="visually-hidden">Loading...</span></div>';
                    
                    // Make AJAX request to update role
                    const formData = new FormData();
                    formData.append('userId', userId);
                    formData.append('userType', roleValue);

                    fetch('@Url.Action("UpdateUserRoleAjax", "Admin")', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`Server returned ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Restore the select
                        parentTD.innerHTML = originalHtml;
                        
                        // Get the select again after it's been restored
                        const newSelect = document.querySelector(`.role-select[data-user-id="${userId}"]`);
                        if (newSelect) {
                            newSelect.value = roleValue;
                        }
                        
                        if (data.success) {
                            // Show success message
                            const alertElement = document.getElementById('successAlert');
                            const messageElement = document.getElementById('successMessage');
                            messageElement.textContent = data.message;
                            alertElement.classList.add('show');
                            alertElement.classList.remove('d-none');
                            
                            // Hide after 5 seconds
                            setTimeout(() => {
                                alertElement.classList.remove('show');
                                setTimeout(() => alertElement.classList.add('d-none'), 300);
                            }, 5000);
                        } else {
                            alert('Error: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error updating role:', error);
                        // Use the stored reference instead of 'this'
                        if (parentTD) {
                            parentTD.innerHTML = originalHtml;
                        }
                        alert('Failed to update user role. Please try again.');
                    });
                });
            });

            // Handle view user details button click
            document.querySelectorAll('.view-user-btn').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Get the user data from the table row
                    const row = this.closest('tr');
                    const userId = row.querySelector('.role-select').getAttribute('data-user-id');
                    
                    // Show spinner in modal body while loading
                    const modalBody = document.querySelector('#userDetailsModal .modal-body');
                    const originalModalContent = modalBody.innerHTML;
                    modalBody.innerHTML = '<div class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>';
                    
                    // Show the modal
                    const userModal = new bootstrap.Modal(document.getElementById('userDetailsModal'));
                    userModal.show();
                    
                    // Fetch user details from the server
                    fetch(`@Url.Action("GetUserDetails", "Admin")?userId=${encodeURIComponent(userId)}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Failed to load user details');
                            }
                            return response.json();
                        })
                        .then(user => {
                            // Reset modal content
                            modalBody.innerHTML = originalModalContent;
                            
                            // Fill in user details
                            document.getElementById('detailUsername').textContent = user.username;
                            document.getElementById('detailFullName').textContent = `${user.firstName} ${user.lastName}`;
                            document.getElementById('detailEmail').textContent = user.email;
                            document.getElementById('detailContact').textContent = user.contactNo || 'Not provided';
                            document.getElementById('detailDOB').textContent = user.dateOfBirth ? new Date(user.dateOfBirth).toLocaleDateString() : 'Not provided';
                            document.getElementById('detailGender').textContent = 
                                user.gender === 1 ? 'Male' : 
                                user.gender === 2 ? 'Female' : 'Other';
                            document.getElementById('detailRole').textContent = user.userType === 2 ? 'Member' : 'Staff';
                            document.getElementById('detailRegisteredDate').textContent = new Date(user.registeredDate).toLocaleDateString();
                            document.getElementById('detailOrders').textContent = user.successfulOrderCount;
                            
                            // Set user image
                            const imageContainer = document.getElementById('userImageContainer');
                            if (user.imageUrlText) {
                                imageContainer.innerHTML = `<img src="${user.imageUrlText}" alt="Profile" class="rounded-circle mb-3" style="width: 150px; height: 150px; object-fit: cover;">`;
                            } else {
                                imageContainer.innerHTML = `<div class="bg-secondary rounded-circle text-white d-flex align-items-center justify-content-center mx-auto mb-3" style="width: 150px; height: 150px;">
                                    <i class="fas fa-user fa-4x"></i>
                                </div>`;
                            }
                        })
                        .catch(error => {
                            console.error('Error fetching user details:', error);
                            modalBody.innerHTML = `<div class="alert alert-danger">Failed to load user details: ${error.message}</div>`;
                        });
                });
            });
        });
    </script>
}

